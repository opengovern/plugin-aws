name: Release

on:
  push:
    branches:
      - main

jobs:
  tag:
    runs-on: ubuntu-latest
    outputs:
      latest_tag: ${{ steps.set_latest_tag.outputs.latest_tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_TOKEN }}
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: stable
      - name: Tag version
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GH_TOKEN }}
          release_branches: main
          tag_prefix: v
      - name: Set latest tag output
        id: set_latest_tag
        run: |
          if [[ -z "${{ steps.tag_version.outputs.new_tag }}" ]]; then
            echo "latest_tag=${{ steps.tag_version.outputs.previous_tag }}" >> "$GITHUB_OUTPUT"
          else
            echo "latest_tag=${{ steps.tag_version.outputs.new_tag }}" >> "$GITHUB_OUTPUT"
          fi
      - name: Save new tag
        id: save_new_tag
        run: |
          version=${{ steps.tag_version.outputs.new_tag }}
          version=${version#v}
          echo $version > new_tag.txt
      - name: Upload new tag
        uses: actions/upload-artifact@v3
        with:
          name: new_tag
          path: new_tag.txt
  release:
    runs-on: ubuntu-latest
    needs:
      - tag
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_TOKEN }}
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: stable
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v5
        with:
          distribution: goreleaser
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

